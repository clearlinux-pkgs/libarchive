From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Christoph Reiter <reiter.christoph@gmail.com>
Date: Sat, 10 Dec 2022 12:00:25 +0100
Subject: [PATCH] Revert "autotools: Fix static linking when openssl is enabled
 in windows"

This reverts commit a83f3d327aefe8d628230f326621b014d82f55b4.

This was referencing iconv.pc, which isn't available on all platforms,
and also added a dev dependency to openssl .pc files, which, while
technically correct, makes updating this point release more involved than
necessary.
---
 build/pkgconfig/libarchive.pc.in | 1 -
 configure.ac                     | 4 ----
 2 files changed, 5 deletions(-)

diff --git a/build/pkgconfig/libarchive.pc.in b/build/pkgconfig/libarchive.pc.in
index 1f51e77..4b631e6 100644
--- a/build/pkgconfig/libarchive.pc.in
+++ b/build/pkgconfig/libarchive.pc.in
@@ -10,4 +10,3 @@ Cflags: -I${includedir}
 Cflags.private: -DLIBARCHIVE_STATIC
 Libs: -L${libdir} -larchive
 Libs.private: @LIBS@
-Requires.private: @LIBSREQUIRED@
diff --git a/configure.ac b/configure.ac
index 349e758..d60f66f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -378,7 +378,6 @@ if test "x$with_iconv" != "xno"; then
     AC_CHECK_HEADERS([localcharset.h])
     am_save_LIBS="$LIBS"
     LIBS="${LIBS} ${LIBICONV}"
-    LIBSREQUIRED="$LIBSREQUIRED${LIBSREQUIRED:+ }iconv"
     AC_CHECK_FUNCS([locale_charset])
     LIBS="${am_save_LIBS}"
     if test "x$ac_cv_func_locale_charset" != "xyes"; then
@@ -1210,7 +1209,6 @@ fi
 if test "x$with_openssl" != "xno"; then
     AC_CHECK_HEADERS([openssl/evp.h])
     saved_LIBS=$LIBS
-    LIBSREQUIRED="$LIBSREQUIRED${LIBSREQUIRED:+ }libssl libcrypto"
     AC_CHECK_LIB(crypto,OPENSSL_config)
     CRYPTO_CHECK(MD5, OPENSSL, md5)
     CRYPTO_CHECK(RMD160, OPENSSL, rmd160)
@@ -1221,8 +1219,6 @@ if test "x$with_openssl" != "xno"; then
     AC_CHECK_FUNCS([PKCS5_PBKDF2_HMAC_SHA1])
 fi
 
-AC_SUBST(LIBSREQUIRED)
-
 # Probe libmd AFTER OpenSSL/libcrypto.
 # The two are incompatible and OpenSSL is more complete.
 AC_CHECK_HEADERS([md5.h ripemd.h sha.h sha256.h sha512.h])
